{"version":3,"sources":["contexts/GlobalContext.js","components/Web3Connection.js","components/DatePicker.js","components/MakeTimeCapsule.js","helpers/DateHelper.js","components/OpenCapsule.js","components/CheckTimeCapsule.js","App.js","reportWebVitals.js","index.js"],"names":["Reducer","state","action","type","provider","payload","contract","ipfs","error","GlobalContext","createContext","contractABI","require","abi","Web3Connection","useContext","dispatch","browserWalletConnect","a","window","ethereum","enable","web3provider","ethers","providers","Web3Provider","getNetwork","chainId","getSigner","signer","Contract","alert","w","onClick","DatePicker","selectedDate","onChange","isClearable","showPopperArrow","props","selected","MakeTimeCapsule","useState","message","setMessage","title","setTitle","Date","dueDate","setDueDate","submitting","setSubmitting","makeTimeCapsule","length","msgblob","Blob","strEncodeUTF16","buffer","titleblob","add","msgHash","path","titleHash","registerTimeCapsule","BigNumber","from","Math","floor","getTime","wait","then","receipt","str","buf","ArrayBuffer","bufView","Uint16Array","i","strLen","charCodeAt","size","resize","placeholder","value","e","target","h","py","pl","date","back","pb","change","toMonth","m","OpenCapsule","connecting","setConnecting","fee","setFee","newdate","setNewdate","useEffect","opencapsule","tokenURI","token","id","uri","fetch","data","blob","arrayBuffer","String","fromCharCode","apply","changeDueDate","resetDueDate","calculateFee","calculateResetFee","inGwei","my","isReadOnly","getMonth","getDate","getFullYear","mb","precision","CheckTimeCapsule","tokenlist","setTokenlist","open","setOpen","getAddress","address","newtokenlist","loop","tokenOfOwnerByIndex","tokenId","toNumber","creationDate","viewTitle","push","getTimeCapsuleList","map","key","App","useReducer","checkTC","setCheckTC","makeTC","setMakeTC","Ipfs","create","relay","enabled","hop","active","repo","setUpIpfs","Provider","fontWeight","fontSize","style","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.add9f398.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const Reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_WEB3':\n      return{\n        ...state,\n        provider: action.payload\n      };\n    case 'SET_CONTRACT':\n      return{\n        ...state,\n        contract: action.payload\n      };\n    case 'SET_IPFS':\n      return{\n        ...state,\n        ipfs: action.payload\n      }\n    case 'SET_ERROR':\n      return{\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport const GlobalContext = createContext();","import React, { useContext } from 'react';\nimport {\n  VStack,\n  Button,\n} from '@chakra-ui/react';\nimport {ethers} from 'ethers';\n\nimport { GlobalContext } from '../contexts/GlobalContext';\n\nconst contractAddress = '0x6a3EbB3C33eD03a00995b39E870Ba09C2E93BcE4';\nconst contractABI = require('../abis/TimeCapsule.json').abi;\n\nconst Web3Connection=()=>{\n  const [state, dispatch] = useContext(GlobalContext);\n\n  const browserWalletConnect = async () => {\n    try{\n      if(window.ethereum) { await window.ethereum.enable() }\n      const web3provider = new ethers.providers.Web3Provider(window.ethereum);\n      const chainId = (await web3provider.getNetwork()).chainId;\n      if(chainId===4){\n        //set provider\n        dispatch({type: 'SET_WEB3', payload: web3provider});\n\n        //set instance\n        let signer = await web3provider.getSigner();\n        let contract = new ethers.Contract(contractAddress, contractABI, signer);\n        dispatch({type: 'SET_CONTRACT', payload: contract});\n      } else {\n        window.alert('Not Using Rinkeby. Please reconnect using a wallet connected to the Rinkeby network');\n      }\n    } catch(err){\n      dispatch({type: 'SET_ERROR', payload: 'Connection to Wallet Failed'});\n      window.alert('Connection Failed');\n    }\n  }\n\n  return(\n    <VStack>\n      <Button w='200px' onClick={browserWalletConnect}>\n        Connect to Wallet\n      </Button>\n    </VStack>\n  )\n}\n\nexport default Web3Connection;","import React, { HTMLAttributes } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport '../styles/react-datepicker.css';\nimport '../styles/date-picker.css';\n\ninterface Props {\n  isClearable?: boolean;\n  onChange: (date: Date) => any;\n  selectedDate: Date | undefined;\n  showPopperArrow?: boolean;\n}\n\nconst DatePicker = ({\n  selectedDate,\n  onChange,\n  isClearable = false,\n  showPopperArrow = false,\n  ...props\n}: Props & HTMLAttributes<HTMLElement>) => {\n  return (\n    <ReactDatePicker\n      selected={selectedDate}\n      onChange={onChange}\n      isClearable={isClearable}\n      showPopperArrow={showPopperArrow}\n      {...props}\n    />\n  );\n};\n\nexport default DatePicker;","import React, { useContext, useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Button,\n  Input,\n  Textarea,\n} from '@chakra-ui/react';\nimport {ethers} from 'ethers';\n\nimport { GlobalContext } from '../contexts/GlobalContext';\nimport DatePicker from '../components/DatePicker'\n\nconst MakeTimeCapsule=(props)=>{\n  const [state, dispatch] = useContext(GlobalContext);\n  const [message, setMessage] = useState('');\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState(new Date());\n  const [submitting, setSubmitting] = useState(0);\n\n  const makeTimeCapsule = async() => {\n    if(title.length>60){ window.alert('Your title is too long. It should be less than 60 characters'); }\n    else {\n      setSubmitting(1);\n        try{\n          let msgblob = new Blob([strEncodeUTF16(message).buffer])\n          let titleblob = new Blob([strEncodeUTF16(title).buffer]);\n          let msgHash = (await state.ipfs.add(msgblob,{})).path;\n          let titleHash = (await state.ipfs.add(titleblob,{})).path;\n          (await state.contract.registerTimeCapsule(\n            ethers.BigNumber.from(Math.floor(dueDate.getTime()/1000)),\n            msgHash,\n            titleHash\n            )).wait().then(async(receipt)=>{\n              setSubmitting(2);\n            });\n        }catch(err){\n          window.alert(err.message);\n          if(err.message==='MetaMask Tx Signature: User denied transaction signature.'){\n            window.alert('User denied transaction');\n          }\n          else { dispatch({type:'SET_ERROR', payload: err}); }\n        }\n    }\n  }\n\n  const strEncodeUTF16=(str)=>{\n    var buf = new ArrayBuffer(str.length*2);\n    var bufView = new Uint16Array(buf);\n    for (var i=0, strLen=str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return bufView;\n  }\n\n  return(\n    <Box w='800px'>\n      {submitting===1 ? <VStack>\n          <Box>Submitting...</Box>\n          <Box>If this takes longer than usual, comeback after the transaction has been finished</Box>\n        </VStack>\n      : submitting===0 ? \n        <Box>\n          <Input\n            size='md'\n            resize='none'\n            placeholder='title'\n            value={title}\n            onChange={(e)=>{setTitle(e.target.value)}}\n          />\n          <Box h=\"2px\"></Box>\n          <Textarea\n            h='300px'\n            value={message}\n            onChange={(e)=>{setMessage(e.target.value)}}\n            placeholder='Write to your future!'\n            size='sm'\n            resize='none'\n          />\n          <HStack py={2}>\n            <Box pl={5}>Select Duedate: </Box>\n            <DatePicker selected={dueDate} onChange={(date)=>setDueDate(date)}/>\n            <Box pl={300}>\n              <Button onClick={makeTimeCapsule}>\n                Submit\n              </Button>\n            </Box>\n          </HStack>\n          <Button onClick={props.back}>Back</Button>\n        </Box>\n      : submitting===2 ?\n        <VStack>\n          <Box pb={5}>Submitted</Box>\n          <Button onClick={props.change}>Check your Time Capsules</Button>\n        </VStack>\n      : <Box>Something is Wrong</Box>}\n    </Box> \n  )\n}\n\nexport default MakeTimeCapsule;","export const toMonth=(m)=>{\n  if(m===0) return 'January'\n  else if(m===1) return 'February'\n  else if(m===2) return 'March'\n  else if(m===3) return 'April'\n  else if(m===4) return 'May'\n  else if(m===5) return 'June'\n  else if(m===6) return 'July'\n  else if(m===7) return 'August'\n  else if(m===8) return 'September'\n  else if(m===9) return 'October'\n  else if(m===10) return 'November'\n  else if(m===11) return 'December'\n  else return 'Error'\n}","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Box,\n  HStack,\n  Button,\n  Textarea,\n  NumberInput,\n  NumberInputField,\n  Divider,\n} from '@chakra-ui/react';\nimport {ethers} from 'ethers';\n\nimport { GlobalContext } from '../contexts/GlobalContext';\nimport DatePicker from './DatePicker';\nimport { toMonth } from '../helpers/DateHelper';\n\nconst OpenCapsule=(props)=>{\n  const [state,dispatch] = useContext(GlobalContext);\n  const [connecting, setConnecting] = useState(true);\n  const [message, setMessage] = useState();\n  const [fee, setFee] = useState(0);\n  const [newdate, setNewdate] = useState(new Date());\n\n  useEffect(() => {\n    opencapsule();\n  }, [])\n\n  const opencapsule=async()=>{\n    let uri;\n    try{\n      uri = await state.contract.tokenURI(props.token.id);\n      let data = await fetch(`https://ipfs.io/ipfs/${uri}`);\n      let blob = await data.blob();\n      let arrayBuffer = await blob.arrayBuffer();\n      setMessage(String.fromCharCode.apply(null, new Uint16Array(arrayBuffer)));\n    }catch(err){\n      dispatch({type: 'SET_ERROR', payload: err})\n    }\n    setConnecting(false);\n  };\n\n  const changeDueDate=async()=>{\n    setConnecting(true);\n    try{\n      (await state.contract.resetDueDate(\n        props.token.id,\n        ethers.BigNumber.from(Math.floor(newdate.getTime()/1000)),\n        ethers.BigNumber.from(fee),\n        {value: ethers.BigNumber.from(fee)}\n      )).wait().then((receipt)=>{\n        opencapsule();\n      });\n    }catch(err){\n      if(err.message==='MetaMask Tx Signature: User denied transaction signature.'){\n        window.alert('User denied transaction');\n      }\n      else{\n        window.alert('Your fee is too low!!! Use calculate fee to see how much you need to pay in order to move up the due date to what was selected.');\n      }\n      setConnecting(false);\n    }\n  }\n\n  const calculateFee=async()=>{\n    let inGwei = (await state.contract.calculateResetFee(\n      props.token.id,\n      ethers.BigNumber.from(Math.floor(newdate.getTime()/1000))\n    ));\n    setFee(inGwei);\n  }\n\n  return(\n    <Box>\n      <Box pb={7}>{props.token.title}<Divider/></Box>\n      {!connecting\n      ? message\n        ? <Box>\n            <Box w=\"800px\" my={5}>\n              <Textarea            \n                h='300px'\n                value={message}\n                size='sm'\n                resize='vertical'\n                isReadOnly/>\n            </Box>\n          </Box>\n        : <Box>\n            <Box>\n              This capsule cannot be opened until&nbsp;\n              {toMonth(props.token.dueDate.getMonth())}&nbsp;\n              {props.token.dueDate.getDate()},&nbsp;\n              {props.token.dueDate.getFullYear()}.\n            </Box>\n            <Box w=\"400px\" mb={4}>But you can move up or push back the due date by paying a fee.</Box>\n            <HStack>\n              <Box>New due date: </Box>\n              <Box w=\"20px\"></Box>\n              <DatePicker selected={newdate} onChange={(date)=>setNewdate(date)}/>\n            </HStack>\n            <Box h=\"4px\"></Box>\n            <HStack>\n              <Box>Fee: </Box>\n              <Box w=\"90px\"></Box>\n              <NumberInput value={fee/1e18} precision={7}>\n                <NumberInputField />\n              </NumberInput>\n            </HStack>\n            <HStack my={5}>\n              <Button onClick={changeDueDate}>Change Due Date</Button>\n              <Box w=\"100px\"></Box>\n              <Button onClick={calculateFee}>Calculate Fee</Button>\n            </HStack>\n          </Box>\n      : <Box>\n          <Box my={5}>Connecting...</Box>\n        </Box>}\n      <Button onClick={props.back}>Back</Button>\n    </Box>\n  )\n}\n\nexport default OpenCapsule;","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Box,\n  VStack,\n  Button,\n} from '@chakra-ui/react';\n\nimport { GlobalContext } from '../contexts/GlobalContext';\nimport OpenCapsule from './OpenCapsule';\nimport { toMonth } from '../helpers/DateHelper';\n\nconst CheckTimeCapsule=(props)=>{\n  const [state,dispatch] = useContext(GlobalContext);\n  const [tokenlist, setTokenlist] = useState([]);\n  const [connecting, setConnecting] = useState(false);\n  const [open, setOpen] = useState();\n\n  useEffect(() => {\n    const getTimeCapsuleList=async()=>{\n      let address = await (await state.provider.getSigner()).getAddress();\n      setConnecting(true);\n      const newtokenlist=[];\n      var loop = true;\n      for(var i=0;loop;i++){\n        try{\n          let tokenId = (await state.contract.tokenOfOwnerByIndex(address, i)).toNumber();\n          let dueDate = new Date((await state.contract.dueDate(tokenId)).toNumber()*1000);\n          let creationDate = new Date((await state.contract.creationDate(tokenId)).toNumber()*1000);\n\n          let uri = await state.contract.viewTitle(tokenId);\n          let data = await fetch(`https://ipfs.io/ipfs/${uri}`);\n          let blob = await data.blob();\n          let arrayBuffer = await blob.arrayBuffer();\n          let title = String.fromCharCode.apply(null, new Uint16Array(arrayBuffer));\n\n          newtokenlist.push({id: tokenId, dueDate: dueDate, creationDate: creationDate, title: title});\n        }catch(err){\n          loop = false;\n        }\n      }\n      setTokenlist(newtokenlist);\n      setConnecting(false);\n    };\n\n    getTimeCapsuleList();\n  }, [])\n\n  return(\n    open? <OpenCapsule token={open} back={()=>setOpen(false)}/>\n    : <Box>\n        <Box my={5}>\n            {connecting?<Box>Connecting...</Box>\n            : tokenlist.length===0\n              ? <VStack>\n                  <Box my={3}>You have no Time Capsules</Box>\n                  <Button onClick={props.change}>Make a Time Capsule</Button>\n                </VStack>\n              : <VStack>\n                  {tokenlist.map((token, key)=>{\n                    return <Button onClick={()=>setOpen(token)}>\n                      {token.title}&nbsp;\n                       from&nbsp;\n                       {toMonth(token.creationDate.getMonth())}&nbsp;\n                       {token.creationDate.getDate()},&nbsp;\n                       {token.creationDate.getFullYear()}\n                    </Button>\n                  })}\n                </VStack>}\n        </Box>\n        <Button onClick={props.back}>Back</Button>\n      </Box>\n  );\n}\n\nexport default CheckTimeCapsule;","import React, { useReducer, useState, useEffect } from 'react';\nimport {\n  Box,\n  ChakraProvider,\n  Center,\n  VStack,\n  Button,\n  Divider,\n} from '@chakra-ui/react';\nimport Ipfs from 'ipfs';\n\nimport { Reducer, GlobalContext } from \"./contexts/GlobalContext\";\nimport Web3Connection from \"./components/Web3Connection\";\nimport MakeTimeCapsule from \"./components/MakeTimeCapsule\";\nimport CheckTimeCapsule from \"./components/CheckTimeCapsule\";\n\nfunction App() {\n  const initialState = {\n  };\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  const [checkTC, setCheckTC] = useState(false);\n  const [makeTC, setMakeTC] = useState(false);\n\n  useEffect(()=>{\n    const setUpIpfs=async()=>{\n      try{\n        let ipfs = await Ipfs.create({\n          relay: {enabled: true, hop: {enabled: true, active: true}},\n          repo: \"ipfs-cp\"\n          });\n        dispatch({type:'SET_IPFS', payload: ipfs});\n      }catch(err){\n        window.alert(err.message);\n      }\n    };\n\n    setUpIpfs();\n  },[]);\n\n  return (\n    <GlobalContext.Provider value={[state,dispatch]}>\n      <ChakraProvider>\n        <Center h=\"15vh\">\n          <VStack>\n            <Box fontWeight='bold' fontSize='30px'>Ethereum Time Capsule</Box>\n            <Box pl={400}>powered by Rinkeby</Box>\n          </VStack>\n        </Center>\n          <Divider/>\n        <Center h=\"60vh\">\n          <VStack style={{textAlign: 'center', fontWeight: 'bold',}}>\n          {state.provider?\n            !checkTC&&!makeTC ? \n              <VStack>\n                <Button my={5} onClick={()=>{setCheckTC(true)}}>\n                  Check your Time Capsules\n                </Button>\n                <Button my={5} onClick={()=>{setMakeTC(true)}}>\n                  Make a new Time Capsule\n                </Button>\n              </VStack>\n            :checkTC&&!makeTC ?\n              <CheckTimeCapsule\n                back={()=>{setCheckTC(false)}} \n                change={()=>{setCheckTC(false); setMakeTC(true)}}/>\n            :makeTC&&!checkTC ?\n              <MakeTimeCapsule\n                back={()=>{setMakeTC(false)}} \n                change={()=>{setMakeTC(false); setCheckTC(true)}}/>\n            :<p>Give it a few miliseconds</p>\n          : <Web3Connection/>}\n          </VStack>\n        </Center>\n      </ChakraProvider>\n    </GlobalContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}